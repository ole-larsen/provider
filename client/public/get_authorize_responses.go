// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/olelarssen/provider/models"
)

// GetAuthorizeReader is a Reader for the GetAuthorize structure.
type GetAuthorizeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthorizeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthorizeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetAuthorizeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAuthorizeOK creates a GetAuthorizeOK with default headers values
func NewGetAuthorizeOK() *GetAuthorizeOK {
	return &GetAuthorizeOK{}
}

/*
GetAuthorizeOK describes a response with status code 200, with default header values.

authorize
*/
type GetAuthorizeOK struct {
	Payload *models.Authorize
}

// IsSuccess returns true when this get authorize o k response has a 2xx status code
func (o *GetAuthorizeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get authorize o k response has a 3xx status code
func (o *GetAuthorizeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorize o k response has a 4xx status code
func (o *GetAuthorizeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorize o k response has a 5xx status code
func (o *GetAuthorizeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorize o k response a status code equal to that given
func (o *GetAuthorizeOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAuthorizeOK) Error() string {
	return fmt.Sprintf("[GET /authorize][%d] getAuthorizeOK  %+v", 200, o.Payload)
}

func (o *GetAuthorizeOK) String() string {
	return fmt.Sprintf("[GET /authorize][%d] getAuthorizeOK  %+v", 200, o.Payload)
}

func (o *GetAuthorizeOK) GetPayload() *models.Authorize {
	return o.Payload
}

func (o *GetAuthorizeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Authorize)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizeInternalServerError creates a GetAuthorizeInternalServerError with default headers values
func NewGetAuthorizeInternalServerError() *GetAuthorizeInternalServerError {
	return &GetAuthorizeInternalServerError{}
}

/*
GetAuthorizeInternalServerError describes a response with status code 500, with default header values.

When some error occurs
*/
type GetAuthorizeInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get authorize internal server error response has a 2xx status code
func (o *GetAuthorizeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorize internal server error response has a 3xx status code
func (o *GetAuthorizeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorize internal server error response has a 4xx status code
func (o *GetAuthorizeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorize internal server error response has a 5xx status code
func (o *GetAuthorizeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get authorize internal server error response a status code equal to that given
func (o *GetAuthorizeInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAuthorizeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /authorize][%d] getAuthorizeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthorizeInternalServerError) String() string {
	return fmt.Sprintf("[GET /authorize][%d] getAuthorizeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthorizeInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAuthorizeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
