// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/olelarssen/provider/models"
)

// GetGoogleCallbackOKCode is the HTTP code returned for type GetGoogleCallbackOK
const GetGoogleCallbackOKCode int = 200

/*
GetGoogleCallbackOK ok response

swagger:response getGoogleCallbackOK
*/
type GetGoogleCallbackOK struct {

	/*
	  In: Body
	*/
	Payload *models.UserInfo `json:"body,omitempty"`
}

// NewGetGoogleCallbackOK creates GetGoogleCallbackOK with default headers values
func NewGetGoogleCallbackOK() *GetGoogleCallbackOK {

	return &GetGoogleCallbackOK{}
}

// WithPayload adds the payload to the get google callback o k response
func (o *GetGoogleCallbackOK) WithPayload(payload *models.UserInfo) *GetGoogleCallbackOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get google callback o k response
func (o *GetGoogleCallbackOK) SetPayload(payload *models.UserInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGoogleCallbackOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGoogleCallbackInternalServerErrorCode is the HTTP code returned for type GetGoogleCallbackInternalServerError
const GetGoogleCallbackInternalServerErrorCode int = 500

/*
GetGoogleCallbackInternalServerError When some error occurs

swagger:response getGoogleCallbackInternalServerError
*/
type GetGoogleCallbackInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetGoogleCallbackInternalServerError creates GetGoogleCallbackInternalServerError with default headers values
func NewGetGoogleCallbackInternalServerError() *GetGoogleCallbackInternalServerError {

	return &GetGoogleCallbackInternalServerError{}
}

// WithPayload adds the payload to the get google callback internal server error response
func (o *GetGoogleCallbackInternalServerError) WithPayload(payload *models.Error) *GetGoogleCallbackInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get google callback internal server error response
func (o *GetGoogleCallbackInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGoogleCallbackInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
