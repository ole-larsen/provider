// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/olelarssen/provider/models"
)

// GetAuthorizeOKCode is the HTTP code returned for type GetAuthorizeOK
const GetAuthorizeOKCode int = 200

/*
GetAuthorizeOK authorize

swagger:response getAuthorizeOK
*/
type GetAuthorizeOK struct {

	/*
	  In: Body
	*/
	Payload *models.Authorize `json:"body,omitempty"`
}

// NewGetAuthorizeOK creates GetAuthorizeOK with default headers values
func NewGetAuthorizeOK() *GetAuthorizeOK {

	return &GetAuthorizeOK{}
}

// WithPayload adds the payload to the get authorize o k response
func (o *GetAuthorizeOK) WithPayload(payload *models.Authorize) *GetAuthorizeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get authorize o k response
func (o *GetAuthorizeOK) SetPayload(payload *models.Authorize) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAuthorizeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAuthorizeInternalServerErrorCode is the HTTP code returned for type GetAuthorizeInternalServerError
const GetAuthorizeInternalServerErrorCode int = 500

/*
GetAuthorizeInternalServerError When some error occurs

swagger:response getAuthorizeInternalServerError
*/
type GetAuthorizeInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAuthorizeInternalServerError creates GetAuthorizeInternalServerError with default headers values
func NewGetAuthorizeInternalServerError() *GetAuthorizeInternalServerError {

	return &GetAuthorizeInternalServerError{}
}

// WithPayload adds the payload to the get authorize internal server error response
func (o *GetAuthorizeInternalServerError) WithPayload(payload *models.Error) *GetAuthorizeInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get authorize internal server error response
func (o *GetAuthorizeInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAuthorizeInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
