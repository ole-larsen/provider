// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/olelarssen/provider/models"
)

// GetValidateOKCode is the HTTP code returned for type GetValidateOK
const GetValidateOKCode int = 200

/*GetValidateOK authorize

swagger:response getValidateOK
*/
type GetValidateOK struct {

	/*
	  In: Body
	*/
	Payload *models.Validate `json:"body,omitempty"`
}

// NewGetValidateOK creates GetValidateOK with default headers values
func NewGetValidateOK() *GetValidateOK {

	return &GetValidateOK{}
}

// WithPayload adds the payload to the get validate o k response
func (o *GetValidateOK) WithPayload(payload *models.Validate) *GetValidateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get validate o k response
func (o *GetValidateOK) SetPayload(payload *models.Validate) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetValidateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetValidateInternalServerErrorCode is the HTTP code returned for type GetValidateInternalServerError
const GetValidateInternalServerErrorCode int = 500

/*GetValidateInternalServerError When some error occurs

swagger:response getValidateInternalServerError
*/
type GetValidateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetValidateInternalServerError creates GetValidateInternalServerError with default headers values
func NewGetValidateInternalServerError() *GetValidateInternalServerError {

	return &GetValidateInternalServerError{}
}

// WithPayload adds the payload to the get validate internal server error response
func (o *GetValidateInternalServerError) WithPayload(payload *models.Error) *GetValidateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get validate internal server error response
func (o *GetValidateInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetValidateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
