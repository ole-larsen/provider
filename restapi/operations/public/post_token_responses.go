// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/olelarssen/provider/models"
)

// PostTokenOKCode is the HTTP code returned for type PostTokenOK
const PostTokenOKCode int = 200

/*
PostTokenOK get client id and client secret

swagger:response postTokenOK
*/
type PostTokenOK struct {

	/*
	  In: Body
	*/
	Payload *models.Token `json:"body,omitempty"`
}

// NewPostTokenOK creates PostTokenOK with default headers values
func NewPostTokenOK() *PostTokenOK {

	return &PostTokenOK{}
}

// WithPayload adds the payload to the post token o k response
func (o *PostTokenOK) WithPayload(payload *models.Token) *PostTokenOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post token o k response
func (o *PostTokenOK) SetPayload(payload *models.Token) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTokenOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostTokenInternalServerErrorCode is the HTTP code returned for type PostTokenInternalServerError
const PostTokenInternalServerErrorCode int = 500

/*
PostTokenInternalServerError When some error occurs

swagger:response postTokenInternalServerError
*/
type PostTokenInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTokenInternalServerError creates PostTokenInternalServerError with default headers values
func NewPostTokenInternalServerError() *PostTokenInternalServerError {

	return &PostTokenInternalServerError{}
}

// WithPayload adds the payload to the post token internal server error response
func (o *PostTokenInternalServerError) WithPayload(payload *models.Error) *PostTokenInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post token internal server error response
func (o *PostTokenInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTokenInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
