// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/olelarssen/provider/models"
)

// GetTelegramLoginOKCode is the HTTP code returned for type GetTelegramLoginOK
const GetTelegramLoginOKCode int = 200

/*
GetTelegramLoginOK ok response

swagger:response getTelegramLoginOK
*/
type GetTelegramLoginOK struct {

	/*
	  In: Body
	*/
	Payload *models.Ok `json:"body,omitempty"`
}

// NewGetTelegramLoginOK creates GetTelegramLoginOK with default headers values
func NewGetTelegramLoginOK() *GetTelegramLoginOK {

	return &GetTelegramLoginOK{}
}

// WithPayload adds the payload to the get telegram login o k response
func (o *GetTelegramLoginOK) WithPayload(payload *models.Ok) *GetTelegramLoginOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get telegram login o k response
func (o *GetTelegramLoginOK) SetPayload(payload *models.Ok) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTelegramLoginOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTelegramLoginInternalServerErrorCode is the HTTP code returned for type GetTelegramLoginInternalServerError
const GetTelegramLoginInternalServerErrorCode int = 500

/*
GetTelegramLoginInternalServerError When some error occurs

swagger:response getTelegramLoginInternalServerError
*/
type GetTelegramLoginInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTelegramLoginInternalServerError creates GetTelegramLoginInternalServerError with default headers values
func NewGetTelegramLoginInternalServerError() *GetTelegramLoginInternalServerError {

	return &GetTelegramLoginInternalServerError{}
}

// WithPayload adds the payload to the get telegram login internal server error response
func (o *GetTelegramLoginInternalServerError) WithPayload(payload *models.Error) *GetTelegramLoginInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get telegram login internal server error response
func (o *GetTelegramLoginInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTelegramLoginInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
