// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/olelarssen/provider/models"
)

// PostRefreshOKCode is the HTTP code returned for type PostRefreshOK
const PostRefreshOKCode int = 200

/*
PostRefreshOK refresh access token using refresh_token

swagger:response postRefreshOK
*/
type PostRefreshOK struct {

	/*
	  In: Body
	*/
	Payload *models.Token `json:"body,omitempty"`
}

// NewPostRefreshOK creates PostRefreshOK with default headers values
func NewPostRefreshOK() *PostRefreshOK {

	return &PostRefreshOK{}
}

// WithPayload adds the payload to the post refresh o k response
func (o *PostRefreshOK) WithPayload(payload *models.Token) *PostRefreshOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post refresh o k response
func (o *PostRefreshOK) SetPayload(payload *models.Token) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRefreshOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRefreshInternalServerErrorCode is the HTTP code returned for type PostRefreshInternalServerError
const PostRefreshInternalServerErrorCode int = 500

/*
PostRefreshInternalServerError When some error occurs

swagger:response postRefreshInternalServerError
*/
type PostRefreshInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostRefreshInternalServerError creates PostRefreshInternalServerError with default headers values
func NewPostRefreshInternalServerError() *PostRefreshInternalServerError {

	return &PostRefreshInternalServerError{}
}

// WithPayload adds the payload to the post refresh internal server error response
func (o *PostRefreshInternalServerError) WithPayload(payload *models.Error) *PostRefreshInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post refresh internal server error response
func (o *PostRefreshInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRefreshInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
